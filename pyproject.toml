[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

[project]
description = "change me"
name = "changeme"
requires-python = ">=3.12"
version = "0.0.0"

dependencies = [
  "ruff>=0.11.12",
  "pre-commit>=4.2.0",
]

# only use poetry for dependencies
# remove this if you want to use poetry for building a dist
[tool.poetry]
package-mode = false

[tool.ruff]
target-version = "py312"
unsafe-fixes = false

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

indent-width = 4
line-length = 88

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
line-ending = "lf"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
  # pycodestyle (E, W)
  "E1",
  "E4",
  "E7",
  "E9",
  "C", # mccabe (C)
  "D1", # pydocstyle (D)
  "D3", # flake8-annotations (ANN)
  "F",
  "I", # isort (I)
  "ANN0",
  "ANN2", # flake8-async (ASYNC)
  "ASYNC", # flake8-2020 (YTT) - python version checks
  "YTT", # bandit (S)
  "S", # flake8-blind-except (BLE)
  "BLE", # flake8-bugbear (B)
  "B", # flake8-builtins (A)
  "A", # flake8-comprehensions (C4)
  "C", # Error (PLE)
  "PLE", # refurb (FURB)
  "FURB", # Ruff-specific rules (RUF)
  "RUF00",
  "RUF03",
  "RUF058",
  "RUF060",
  "RUF100",
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 10
